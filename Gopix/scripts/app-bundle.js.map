{"version":3,"sources":["app.js","environment.js","main.js","components/board.js","components/gopix.js","resources/index.js","resources/binding-behaviors/keystrokes.js"],"names":["App","eventAggregator","handleKeyInput","event","keycode","keyCode","which","keys","left","ea","publish","up","right","down","message","activate","document","addEventListener","deactivate","removeEventListener","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BoardCustomElement","player","subscribe","response","logoClass","GopixCustomElement","move","toplay","oponent","maxX","maxY","maxStrength","playerStrength","gopix","pixStyle","pix","style","borderWidth","Math","floor","strength","opacity","bgR","bgG","bgB","name","turn","console","log","temp","direction","step","getNewPixes","dx","dy","newPixes","y","x","thisPix","newX","newY","newPix","push","reset","Keystrokes","myKeypressCallback","keypressInput","bind","window","e"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\n\n@inject(EventAggregator)\nexport class App {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.message = 'Gopix Raiders';\n        this.keys = {\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n    }\n\n    activate() {\n        document.addEventListener('keydown', this.handleKeyInput, true);\n    }\n\n    deactivate() {\n        document.removeEventListener('keydown', this.handleKeyInput);\n    }\n\n    handleKeyInput = (event) => {\n        var keycode = event.keyCode || event.which; // also for cross-browser compatible\n        switch (keycode) {\n            case this.keys.left:\n                this.ea.publish('keyPressed', \"left\");\n                break;\n            case this.keys.up:\n                this.ea.publish('keyPressed', \"up\");\n                break;\n            case this.keys.right:\n                this.ea.publish('keyPressed', \"right\");\n                break;\n            case this.keys.down:\n                this.ea.publish('keyPressed', \"down\");\n                break;\n            default:\n                this.ea.publish('keyPressed', \"somekey\");\n        }\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class BoardCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.player = 'white';\n        this.ea.subscribe('player', response => {\n            this.player = response;\n        });\n    }\n\n    logoClass() {\n        return this.player;\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\n\n@inject(EventAggregator)\nexport class GopixCustomElement {\n\n    constructor(eventAggregator) {\n\n        this.ea = eventAggregator;\n\n        this.ea.subscribe('keyPressed', response => {\n            this.move(response);\n        });\n\n        this.toplay = 'white';\n        this.oponent = 'black';\n\n        this.maxX = 33;\n        this.maxY = 33;\n\n        this.maxStrength = 33;\n\n        this.playerStrength = {\n            'white': 3,\n            'black': 3\n        }\n\n        this.gopix = [];\n\n        this.pixStyle = function(pix) {\n            let style = \"\";\n            let borderWidth = Math.floor(pix.strength / 8);\n            let opacity = pix.strength / this.maxStrength;\n            var bgR, bgG, bgB;\n            switch (pix.name) {\n                case 'white':\n                    bgR = 255;\n                    bgG = 255;\n                    bgB = 255;\n                    break;\n                case 'black':\n                    bgR = 0;\n                    bgG = 0;\n                    bgB = 0;\n                    break;\n                default:\n                    bgR = 61;\n                    bgG = 137;\n                    bgB = 217;\n            }\n            style = {\n                'borderWidth': borderWidth + 'px',\n                'backgroundColor': 'rgba(' + bgR + ', ' + bgG + ', ' + bgB + ', ' + opacity + ')'\n            }\n            return style;\n        }\n\n        this.turn = function() {\n            if (this.playerStrength[this.toplay] < this.maxStrength) {\n                this.playerStrength[this.toplay]++\n            }\n            console.log(this.playerStrength);\n            // switch color\n            let temp = this.oponent;\n            this.oponent = this.toplay;\n            this.toplay = temp;\n            this.ea.publish('player', this.toplay);\n        }\n\n        this.move = function(direction) {\n            switch (direction) {\n                case 'left':\n                    this.step(-1, 0);\n                    break;\n                case 'right':\n                    this.step(1, 0);\n                    break;\n                case 'up':\n                    this.step(0, -1);\n                    break;\n                case 'down':\n                    this.step(0, 1);\n                    break;\n                default:\n            }\n            this.turn();\n        }\n\n        this.getNewPixes = function(dx, dy) {\n            let newPixes = [];\n            for (let y = 0; y < this.maxY; y++) {\n                for (let x = 0; x < this.maxX; x++) {\n                    let thisPix = this.gopix[y][x];\n                    if (thisPix.name === this.toplay) {\n                        if (thisPix.strength > this.playerStrength[this.toplay] / 4) {\n                            let newX = (x + dx + this.maxX) % this.maxX;\n                            let newY = (y + dy + this.maxY) % this.maxY;\n                            let newPix = [newX,newY];\n                            if (this.gopix[newY][newX].name == 'empty') {\n                                newPixes.push([newPix]);\n                            }\n                            if ((this.gopix[newY][newX].name == this.oponent) &&\n                                (this.gopix[newY][newX].strength < thisPix.strength)) {\n                                newPixes.push([newPix]);\n                            }\n                        }\n                    }\n                }\n            }\n            return newPixes;\n        }\n\n        this.step = function(dx, dy) {\n            let newPixes = this.getNewPixes(dx, dy);\n            console.log(newPixes);\n            // this.weakenPixes();\n            // this.drawNewPixes(newPixes);\n\n            // Gather pixes of current color with strength = 3\n            // for (let y = 0; y < this.maxY; y++) {\n            //     for (let x = 0; x < this.maxX; x++) {\n            //         let thisPix = this.gopix[y][x];\n            //         let $row = $($('.row')[y]);\n            //         let $pix = $($row.children('.pix')[x]);\n            //         if (thisPix.name === this.toplay) {\n            //             if (thisPix.strength > this.playerStrength[this.toplay] / 2) {\n            //                 newPixes.push([\n            //                     [(x + dx + maxX) % maxX],\n            //                     [(y + dy + maxY) % maxY]\n            //                 ]);\n            //             }\n            //             if (thisPix.strength > 0) {\n            //                 thisPix.strength--;\n            //             }\n            //             if (thisPix.strength === 0) {\n            //                 thisPix.name === 'empty';\n            //                 $pix.removeClass('white black').addClass('empty');\n            //                 $pix.css(this.pixStyle(thisPix));\n            //             }\n            //         } else {\n            //             $pix.css(this.pixStyle(thisPix));\n            //         }\n            //\n            //     }\n            // }\n            // let newPix = {\n            //     \"name\": this.toplay,\n            //     \"strength\": this.playerStrength[this.toplay]\n            // }\n            // for (var i = 0; i < newPixes.length; i++) {\n            //     this.gopix[newPixes[i][1]][newPixes[i][0]] = newPix;\n            //     let $row = $($('.row')[newPixes[i][1]]);\n            //     let $pix = $($row.children('.pix')[newPixes[i][0]]);\n            //     $pix.removeClass('empty white black').addClass(this.toplay);\n            //     $pix.css(this.pixStyle(newPix));\n            // }\n        }\n\n        // setup the board\n        this.reset = function() {\n            let newPix = {\n                \"name\": \"empty\",\n                \"strength\": 0\n            }\n            for (let y = 0; y < this.maxX; y++) {\n                this.gopix.push([]);\n                for (let x = 0; x < this.maxY; x++) {\n                    this.gopix[y].push(newPix);\n                }\n            }\n            this.gopix[11][11] = {\n                \"name\": \"white\",\n                \"strength\": 7\n            };\n            this.gopix[21][21] = {\n                \"name\": \"black\",\n                \"strength\": 7\n            };\n        };\n\n        this.reset();\n    }\n\n    // pixClass = function(pix) {\n    //     return pix.name;\n    // }\n    //\n    // pixStyle = function(pix) {\n    //     this.pixStyle(pix);\n    // }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Keystrokes {\n    constructor() {\n        this.myKeypressCallback = this.keypressInput.bind(this);\n    }\n\n    activate() {\n        window.addEventListener('keypress', this.myKeypressCallback, false);\n    }\n\n    deactivate() {\n        window.removeEventListener('keypress', this.myKeypressCallback);\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        console.log(e);\n    }\n}\n"],"sourceRoot":"../src"}